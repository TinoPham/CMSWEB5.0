angular.module("ngSelectSerial",["multiselectSerial.tpl.html"]).factory("optionParser",["$parse",function(n){var t=/^\s*(.*?)(?:\s+as\s+(.*?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+(.*)$/;return{parse:function(i){var r=i.match(t);if(!r)throw new Error("Expected typeahead specification in form of '_modelValue_ (as _label_)? for _item_ in _collection_' but got '"+i+"'.");return{itemName:r[3],source:n(r[4]),viewMapper:n(r[2]||r[1]),modelMapper:n(r[1])}},numtoRGB:function(n){n>>>=0;var t=n&255,i=(n&65280)>>>8,r=(n&16711680)>>>16;return"rgb("+[r,i,t].join(",")+")"}}}]).directive("multiselectSerial",["$parse","$document","$compile","$interpolate","optionParser","AppDefine","cmsBase","AppDefine",function(n,t,i,r,u,f,e,f){return{restrict:"E",require:"ngModel",link:function(t,o,s,h){function w(){var n,i,r;if(c.items.length=0,n=l.source(t),angular.isDefined(n)){for(i=0;i<n.length;i++)r={},r[l.itemName]=n[i],c.items.push({label:l.viewMapper(r),model:n[i],checked:!1});c.incurredItems=angular.copy(c.items);b()}}function it(){if(rt(h.$modelValue))return c.header=s.msHeader||e.translateSvc.getTranslate(f.Resx.HEADER_SELECT);if(a)c.header=s.msSelected?r(s.msSelected)(c):h.$modelValue.length+" "+e.translateSvc.getTranslate(f.Resx.HEADER_SELECTED);else{var n={};n[l.itemName]=h.$modelValue;c.header=l.viewMapper(n)}b()}function b(){angular.forEach(h.$viewValue,function(n){k(c.incurredItems,n.SerialNumber)||c.incurredItems.push({label:n.SerialNumber,model:n,checked:!1})})}function rt(n){if(!n)return!0;if(n.length&&n.length>0)return!1;for(var t in n)if(n[t])return!1;return!0}function ut(n){n.checked||(c.uncheckAll(),n.checked=!n.checked);v(!1)}function ft(n){n.checked=!n.checked;v(!0)}function v(n){var t;n?(t=[],angular.forEach(c.items,function(n){n.checked&&t.push(n.model)})):angular.forEach(c.items,function(n){if(n.checked)return t=n.model,!1});h.$setViewValue(t)}function et(n){angular.isArray(n)?angular.forEach(c.items,function(t){t.checked=!1;angular.forEach(n,function(n){angular.equals(t.model,n)&&(t.checked=!0)})}):angular.forEach(c.items,function(t){if(angular.equals(t.model,n))return t.checked=!0,!1})}function k(n,t){var i=$.grep(n,function(n){return n.model.SerialNumber==t});return i.length>0}function ot(n){var t=Array.prototype.slice.call(arguments,1);return n.replace(/{(\d+)}/g,function(n,i){return typeof t[i]!="undefined"?t[i]:n})}var d=s.options,l=u.parse(d),a=s.multiple?!0:!1,g=s.HideSelectAllBtn?!0:!1,y=!1,c=t.$new(),nt=s.change||angular.noop,tt=s.hideIcon?!0:!1,p;c.items=[];c.incurredItems=[];c.header=e.translateSvc.getTranslate(f.Resx.HEADER_SELECT);c.multiple=a;c.hideSelectAllBtn=g;c.disabled=!1;c.hideIcon=tt;c.itemSelected=[];t.$on("$destroy",function(){c.$destroy()});t.$on(f.Events.REMOVESERIALNUMBER,function(n,t){angular.isArray(t)?angular.forEach(t,function(n){c.items.push({label:n.SerialNumber,model:n,checked:!1})}):c.items.push({label:t.SerialNumber,model:t,checked:!1})});p=angular.element("<multiselect-serial-popup><\/multiselect-serial-popup>");(s.required||s.ngRequired)&&(y=!0);s.$observe("required",function(n){y=n});c.$watch(function(){return n(s.disabled)(t)},function(n){c.disabled=n});c.$watch(function(){return n(s.multiple)(t)},function(n){a=n||!1});c.$watch(function(){return l.source(t)},function(n){angular.isDefined(n)&&w()},!0);c.$watch(function(){return h.$modelValue},function(n){angular.isDefined(n)&&(et(n),c.$eval(nt));it();h.$setValidity("required",c.valid())},!0);w();o.append(i(p)(c));c.valid=function(){if(!y)return!0;var n=h.$modelValue;return angular.isArray(n)&&n.length>0||!angular.isArray(n)&&n!=null};c.checkAll=function(){a&&(angular.forEach(c.items,function(n){n.checked=!0}),v(!0))};c.uncheckAll=function(){angular.forEach(c.items,function(n){n.checked=!1});v(!0)};c.select=function(n){a===!1?(ut(n),c.toggleSelect()):ft(n);c.itemSelected=[];angular.forEach(h.$viewValue,function(n){c.itemSelected.push({label:n.SerialNumber,model:n,checked:!0})})};c.addItem=function(n){var i,t;if(n){if(k(c.incurredItems,n)){i=ot(e.translateSvc.getTranslate(f.Resx.SERIAL_NUMBER_EXIST_MSG),n);e.cmsLog.warning(i);return}t={label:n,checked:!1,model:{KDVR:0,SerialNumber:n,ServerID:"Virtual DVR"}};c.items.push(t);c.incurredItems.push(t);c.$applyAsync()}};c.removeItem=function(n){n.model.KDVR==0&&(c.items.splice(c.items.indexOf(n),1),c.itemSelected.splice(c.itemSelected.indexOf(n),1),c.incurredItems.splice(c.incurredItems.indexOf(n),1))};c.GenerateSerial=function(){if(c.itemSelected.length>0){var n=[];angular.forEach(c.itemSelected,function(t){for(var r=angular.copy(c.items),i=0;i<r.length;i++)r[i].model.SerialNumber===t.model.SerialNumber&&c.items.splice(i,1);n.push(t.model)});c.$emit(f.Events.GENERATESERIALNUMBER,n);c.itemSelected=[];c.$applyAsync()}}}}}]).directive("multiselectSerialPopup",["$document","optionParser",function(n,t){return{restrict:"E",scope:!1,replace:!0,templateUrl:"multiselectSerial.tpl.html",link:function(i,r){function u(t){f(t.target,r.find(t.target.tagName))||(r.removeClass("open"),n.unbind("click",u),i.$apply())}i.isVisible=!1;i.toggleSelect=function(){r.hasClass("open")?(r.removeClass("open"),n.unbind("click",u)):(r.addClass("open"),n.bind("click",u),i.focus())};i.showDropdown=function(){r.hasClass("open")||(r.addClass("open"),n.bind("click",u),i.focus())};i.focus=function(){var n=r.find("input")[0];n.focus()};var f=function(n,t){for(var i=0;i<t.length;i++)if(n==t[i])return!0;return!1};i.numtoRGB=function(n){return t.numtoRGB(n)}}}}]);angular.module("multiselectSerial.tpl.html",[]).run(["$templateCache",function(n){n.put("multiselectSerial.tpl.html",'<div class="input-group">\n<div class="dropdown-toggle" ng-click="toggleSelect()" ng-disabled="disabled" ng-class="{\'error\': !valid()}">\n<input class="form-control input-sm" type="text" ng-model="searchText.label" placeholder="{{\'ADD_NEW_DVR\' | translate}}" maxlength="10" />\n<span class="caret pull-right"><\/span>\n <\/div>\n<ul class="dropdown-menu">\n<li ng-show="hideSelectAllBtn" role="presentation" class="multiple-controls">\n<button class="btn btn-link btn-xs" ng-click="checkAll()" type="button"><i class="glyphicon glyphicon-ok"><\/i> Check all<\/button>\n<button class="btn btn-link btn-xs" ng-click="uncheckAll()" type="button"><i class="glyphicon glyphicon-remove"><\/i> Uncheck all<\/button>\n<\/li>\n<li>\n<ul class="dropdown-menu-list scroll-body scrollbar-dynamic" data-jquery-scrollbar> \n<li ng-repeat="i in items | filter:searchText" title="">\n<div ng-class="{\'checkbox checkbox-default\': !hideIcon}" ng-if="multiple" ng-click="select(i); focus()"> \n<input type="checkbox" ng-checked="i.checked" ng-hide="hideIcon"> \n<label class="i-name">{{i.label}} (Server ID: {{i.model.ServerID}})<\/label> \n<span ng-if="i.model.KDVR ==0" class="icon-trash remove-item" ng-click="removeItem(i)"><\/span><\/div><div ng-class="{\'radio radio-default\': !hideIcon}" ng-if="!multiple" ng-click="select(i); focus()"> \n<input type="radio" ng-checked="i.checked" ng-hide="hideIcon"> \n<label class="i-name"> \n<span ng-if="i.model.Color !== undefined" class="i-color" ng-style="{\'border-color\': numtoRGB(i.model.Color) } "><\/span> \n{{i.label}} (Server ID: {{i.model.ServerID}}) \n<\/label> \n<span ng-if="i.model.KDVR==0" class="icon-trash remove-item" ng-click="removeItem(i)"><\/span><\/div><div style="clear: both;"><\/div>\n<\/li> \n<\/ul> \n<\/li>\n<li class="footer-dropdown">\n<div><span class="btn btn-success btn-block" ng-click="GenerateSerial(); toggleSelect();">{{\'BTN_ADD\' | translate}}<\/span><\/div>\n<\/li>\n<\/ul>\n<span class="input-group-addon" ng-click="addItem(searchText.label); showDropdown();"><span class="icon-plus-circled-1"><\/span><\/span>\n<\/div>')}]);
/*
//# sourceMappingURL=angular-select-serial.min.js.map
*/