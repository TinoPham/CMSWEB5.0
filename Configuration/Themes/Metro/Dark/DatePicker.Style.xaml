<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:vsm ="clr-namespace:System.Windows;assembly=PresentationFramework"
					>

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Theme.Colors.xaml" />
        <ResourceDictionary Source="Styles.Shared.xaml" />
        <ResourceDictionary Source="Styles.WPF.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <!--Control colors.-->
    <sys:Double x:Key="CalHeaderSize">12</sys:Double>
    <sys:Double x:Key="CalItemSize">12</sys:Double>
    <Color x:Key="TodayBackground">#99FFFFFF</Color>
    <Color x:Key="NavButtonOver">#FFBABABA</Color>
    <Color x:Key="CalItemOver">#FFBABABA</Color>
    <Color x:Key="NavButtonNormal">#FF181818</Color>
    <Color x:Key="ActiveTextColor">WhiteSmoke</Color>
    <Color x:Key="InActiveTextColor">#4CFFFFFF</Color>
    <Color x:Key="CalSelectedColor">#FF454545</Color>
    <SolidColorBrush x:Key="TextColor" Color="#FF181818"/>
    
    
    
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFBABABA</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <!--<Color x:Key="ControlLightColor">White</Color>-->
    <Color x:Key="ControlLightColor">#FF181818</Color>
    
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <!--<Color x:Key="ControlPressedColor">#FF211AA9</Color>-->


    <Color x:Key="GlyphColor">#E5FFFFFF</Color>
    <Color x:Key="GlyphMouseOver">#FFC6C6C6</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <!--<Color x:Key="HeaderTopColor">#FF333333</Color>-->
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <Color x:Key="CenterIconBackground">#99FFFFFF</Color>
    <Color x:Key="CenterIconBorder">#99FFFFFF</Color>
    <Color x:Key="ControlPressedColor">#99FFFFFF</Color>
    <Color x:Key="HeaderTopColor">#99FFFFFF</Color>
    <Color x:Key="PathColor">#FF181818</Color>
    <SolidColorBrush x:Key="PathBrush" Color="{DynamicResource PathColor}"/>
    <SolidColorBrush x:Key="CenterIconBorderBrush" Color="{DynamicResource CenterIconBorder}"/>
    


    <!--Style for the days of a month.-->
    <Style TargetType="CalendarDayButton" x:Key="CalendarDayButtonStyle">
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="MinHeight" Value="5" />
        <!--<Setter Property="FontSize" Value="10" />-->
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarDayButton">
                    <Grid>
                        <vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0:0:0.1" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState Name="Normal" />
								<vsm:VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HighlightBackground" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="HighlightBackground" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" To="{StaticResource CalItemOver}" />
                                    </Storyboard>
								</vsm:VisualState>
								<vsm:VisualState Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HighlightBackground" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0" />
                                    </Storyboard>
								</vsm:VisualState>
								<vsm:VisualState Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HighlightBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity" To=".35" Duration="0" />
                                    </Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup Name="SelectionStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState Name="Unselected"/>
								<vsm:VisualState Name="Selected">
                                    <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To=".75" Duration="0" />
                                    </Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup Name="CalendarButtonFocusStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
								</vsm:VisualState>
								<vsm:VisualState Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup Name="ActiveStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>

								<vsm:VisualState Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" To="{DynamicResource InActiveTextColor}" />
                                    </Storyboard>
								</vsm:VisualState>
								<vsm:VisualState Name="Active">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" To="{DynamicResource ActiveTextColor}" />
                                    </Storyboard>
								</vsm:VisualState>

							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup Name="DayStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState Name="RegularDay" />
								<vsm:VisualState Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="TodayBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" To="{DynamicResource ActiveTextColor}" />
                                    </Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup Name="BlackoutDayStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState Name="NormalDay" />
								<vsm:VisualState Name="BlackoutDay">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Blackout" Storyboard.TargetProperty="Opacity" To=".2" />
                                    </Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="TodayBackground" RadiusX="1" RadiusY="1" Opacity="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{StaticResource TodayBackground}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        
                        <Rectangle x:Name="SelectedBackground" RadiusX="1" RadiusY="1" Opacity="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{StaticResource SelectedBackgroundColor}" />
                            </Rectangle.Fill>
                            </Rectangle>
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />
                        <Rectangle x:Name="HighlightBackground" RadiusX="1" RadiusY="1" Opacity="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{StaticResource ControlMouseOverColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter x:Name="NormalText" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,1,5,1">
                            <TextElement.Foreground>
                                <SolidColorBrush Color="{DynamicResource ActiveTextColor}" />
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <Path x:Name="Blackout"
                Opacity="0"
                Margin="3"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                RenderTransformOrigin="0.5,0.5"
                Fill="#FF000000"
                Stretch="Fill"
                Data="M8.1772461,11.029181 L10.433105,
                  11.029181 L11.700684,12.801641 L12.973633,
                  11.029181 L15.191895,11.029181 L12.844727,
                  13.999395 L15.21875,17.060919 L12.962891,
                  17.060919 L11.673828,15.256231 L10.352539,
                  17.060919 L8.1396484,17.060919 L10.519043,
                  14.042364 z" />
                        <Rectangle x:Name="DayButtonFocusVisual"
                     Visibility="Collapsed"
                     IsHitTestVisible="false"
                     RadiusX="1"
                     RadiusY="1">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{StaticResource CalSelectedColor}" />
                            </Rectangle.Stroke>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style for the months of a year and years of a decade.-->
    <Style TargetType="CalendarButton"
       x:Key="CalendarButtonStyle">
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="FontSize"
          Value="{StaticResource CalHeaderSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarButton">
                    <Grid>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0:0:0.1" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState Name="Normal">
									<Storyboard>
										<ColorAnimation Duration="0"
                                  Storyboard.TargetName="NormalText"
                                  Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" To="{StaticResource CalItemOver}" />
									</Storyboard>
								</vsm:VisualState>

								<vsm:VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background"
                                   Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
                                    </Storyboard>
								</vsm:VisualState>
								<vsm:VisualState Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background"
                                   Storyboard.TargetProperty="Opacity"
                                   To=".5"
                                   Duration="0" />
                                    </Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup Name="SelectionStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState Name="Unselected" />
								<vsm:VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground"
                                   Storyboard.TargetProperty="Opacity"
                                   To=".75"
                                   Duration="0" />
                                    </Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup Name="ActiveStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState Name="Active" />
								<vsm:VisualState Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
                                  Storyboard.TargetName="NormalText"
                                  Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" To="{StaticResource CalItemOver}" />
                                    </Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup Name="CalendarButtonFocusStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                 Storyboard.TargetName="CalendarButtonFocusVisual"
                                                 Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
								</vsm:VisualState>
								<vsm:VisualState Name="CalendarButtonUnfocused" />
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="SelectedBackground"
                     RadiusX="1"
                     RadiusY="1"
                     Opacity="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{StaticResource SelectedBackgroundColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="Background"
                     RadiusX="1"
                     RadiusY="1"
                     Opacity="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{StaticResource SelectedBackgroundColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter x:Name="NormalText"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="1,0,1,1">
                            <TextElement.Foreground>
								<SolidColorBrush Color="{StaticResource CalItemOver}" />
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <Rectangle x:Name="CalendarButtonFocusVisual"
                     Visibility="Collapsed"
                     IsHitTestVisible="false"
                     RadiusX="1"
                     RadiusY="1">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{StaticResource SelectedBackgroundColor}" />
                            </Rectangle.Stroke>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource ControlMediumColor}" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--Button to go to the previous month or year.-->
    <ControlTemplate x:Key="PreviousButtonTemplate"
                 TargetType="{x:Type Button}">
        <Grid Cursor="Hand">
			<vsm:VisualStateManager.VisualStateGroups>
				<vsm:VisualStateGroup x:Name="CommonStates">
					<vsm:VisualState x:Name="Normal" />
					<vsm:VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                            Storyboard.TargetName="path"
                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                            To="{StaticResource NavButtonOver}" />
                        </Storyboard>
					</vsm:VisualState>
					<vsm:VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                             To=".5"
                             Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                             Storyboard.TargetName="path" />
                        </Storyboard>
					</vsm:VisualState>
				</vsm:VisualStateGroup>
			</vsm:VisualStateManager.VisualStateGroups>
            <!--<Rectangle Fill="Transparent" Opacity="1" Stretch="Fill"/>-->
            <Grid  Background="Transparent"> <Path x:Name="path" Margin="14,-6,0,0"
            Stretch="Fill"
            HorizontalAlignment="Left"
            Height="10"
            VerticalAlignment="Center"
            Width="6"
            Data="M288.75,232.25 L288.75,240.625 L283,236.625 z">
                    <Path.Fill>
                        <SolidColorBrush Color="{StaticResource NavButtonNormal}" />
                    </Path.Fill>
                </Path>
            </Grid>
        </Grid>
    </ControlTemplate>

    <!--Button to go to the next month or year.-->
    <ControlTemplate x:Key="NextButtonTemplate"
                 TargetType="{x:Type Button}">
        <Grid Cursor="Hand">
			<vsm:VisualStateManager.VisualStateGroups>
				<vsm:VisualStateGroup x:Name="CommonStates">
					<vsm:VisualState x:Name="Normal" />
					<vsm:VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                            To="{StaticResource NavButtonOver}"
                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                            Storyboard.TargetName="path" />
                        </Storyboard>
					</vsm:VisualState>
					<vsm:VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                             To=".5"
                             Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                             Storyboard.TargetName="path" />
                        </Storyboard>
					</vsm:VisualState>
				</vsm:VisualStateGroup>
			</vsm:VisualStateManager.VisualStateGroups>
            <!--<Rectangle Fill="#11E5EBF1" Opacity="1" Stretch="Fill"/>-->
            <Grid Background="Transparent">
                <Path x:Name="path"
            Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
            HorizontalAlignment="Right"
            Height="10"
            Margin="0,-6,14,0"
            Stretch="Fill"
            VerticalAlignment="Center"
            Width="6">
                    <Path.Fill>
                        <SolidColorBrush Color="{StaticResource NavButtonNormal}" />
                    </Path.Fill>
                </Path>
            </Grid>
        </Grid>
    </ControlTemplate>

    <!--Button to go up a level to the year or decade.-->
    <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
        <Grid Cursor="Hand" HorizontalAlignment="Stretch">
			<vsm:VisualStateManager.VisualStateGroups>
				<vsm:VisualStateGroup x:Name="CommonStates">
					<vsm:VisualState x:Name="Normal" />
					<vsm:VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                            To="{StaticResource NavButtonOver}"
                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                            Storyboard.TargetName="buttonContent" />
                        </Storyboard>
                    </vsm:VisualState>
                    <vsm:VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="buttonContent" />
                        </Storyboard>
                    </vsm:VisualState>
                </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="buttonContent"
                      Margin="1,4,1,9"
                      ContentTemplate="{TemplateBinding ContentTemplate}"
                      Content="{TemplateBinding Content}"
                      TextElement.Foreground="{DynamicResource TextColor}"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="CalendarItemStyle" TargetType="{x:Type CalendarItem}">
        <Setter Property="Margin" Value="0,3,0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock FontWeight="Bold" FontSize="{StaticResource CalHeaderSize}" Margin="0,6,0,6" Text="{Binding}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{StaticResource ActiveTextColor}" />
                                </TextBlock.Foreground>
                            </TextBlock>
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF" />
                        </Grid.Resources>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal" />
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                   To="1"
                                   Storyboard.TargetProperty="Opacity"
                                   Storyboard.TargetName="PART_DisabledVisual" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}"
                  CornerRadius="1">
                            <Border BorderBrush="#FFFFFFFF" BorderThickness="2" CornerRadius="1">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.Resources></Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="10"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="10" />
										
									</Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
						<Button x:Name="PART_PreviousButton"
                        Template="{StaticResource PreviousButtonTemplate}"
                        Focusable="False"
                        HorizontalAlignment="Left"
                        Grid.Column="0"
                        Grid.Row="0"
                        Height="20"
                        />
                        
										<Button x:Name="PART_HeaderButton"
                        FontWeight="Bold"
                        Focusable="False"
                        FontSize="{StaticResource CalItemSize}"
                        HorizontalAlignment="Center"
						Template="{StaticResource HeaderButtonTemplate}"
                        VerticalAlignment="Center"	  Width="Auto"
						 Grid.Column="1"
                        Grid.Row="0"
                        />

									
									<Button x:Name="PART_NextButton"
                        Focusable="False"
                        HorizontalAlignment="Right"
	                   Grid.Column="2" Grid.Row="0"
                        Template="{StaticResource NextButtonTemplate}"
                        Height="20"
                        />
							<Grid x:Name="PART_MonthView"
                      Visibility="Visible"
                      Grid.ColumnSpan="3"
                      Grid.Row="1"
                      Margin="6,-1,6,6"
                      HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
					<Grid x:Name="PART_YearView"
                      Visibility="Hidden"
                      Grid.ColumnSpan="3"
                      Grid.Row="1"
                      HorizontalAlignment="Center"
                      Margin="6,-3,7,6">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
					</Grid>
                            </Border>
                        </Border>
                        <Rectangle x:Name="PART_DisabledVisual"
                     Fill="{StaticResource DisabledColor}"
                     Opacity="0"
                     RadiusY="2"
                     RadiusX="2"
                     Stretch="Fill"
                     Stroke="{StaticResource DisabledColor}"
                     StrokeThickness="1"
                     Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                   Value="False">
                            <Setter Property="Visibility"
                    TargetName="PART_DisabledVisual"
                    Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayMode, 
              RelativeSource={RelativeSource FindAncestor, 
              AncestorType={x:Type Calendar}}}"
                       Value="Year">
                            <Setter Property="Visibility"
                    TargetName="PART_MonthView"
                    Value="Hidden" />
                            <Setter Property="Visibility"
                    TargetName="PART_YearView"
                    Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, 
              RelativeSource={RelativeSource FindAncestor, 
              AncestorType={x:Type Calendar}}}"
                       Value="Decade">
                            <Setter Property="Visibility"
                    TargetName="PART_MonthView"
                    Value="Hidden" />
                            <Setter Property="Visibility"
                    TargetName="PART_YearView"
                    Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Calendar}">
        <Setter Property="CalendarButtonStyle"
          Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="CalendarDayButtonStyle"
          Value="{StaticResource CalendarDayButtonStyle}" />
        <Setter Property="CalendarItemStyle"
          Value="{StaticResource CalendarItemStyle}" />
        <Setter Property="Foreground" Value="#FF333333" />
		<Setter Property="MinWidth" Value="150"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">

                    <!--The first two gradient stops specifies the background for 
            the calendar's heading and navigation buttons.-->
                    <GradientStop Color="{StaticResource HeaderTopColor}"
                      Offset="0" />
                    <GradientStop Color="{StaticResource HeaderTopColor}"
                      Offset="0.16" />

                    <!--The next gradient stop specifies the background for 
            the calendar area.-->
                    <GradientStop Color="{StaticResource ControlLightColor}"
                      Offset="0.16" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1"
                           StartPoint="0,0">
                    <GradientStop Color="{StaticResource BorderLightColor}"
                      Offset="0" />
                    <GradientStop Color="{StaticResource BorderDarkColor}"
                      Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness"
          Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root"
                    HorizontalAlignment="Center">
                        <CalendarItem x:Name="PART_CalendarItem"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Style="{TemplateBinding CalendarItemStyle}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="DatePickerCalendarStyle"
       TargetType="{x:Type Calendar}"
       BasedOn="{StaticResource {x:Type Calendar}}" />

    <!--The template for the button that displays the calendar.-->
    <Style x:Key="DropDownButtonStyle"
       TargetType="Button">
        <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualStateGroup.Transitions>
                                        <vsm:VisualTransition GeneratedDuration="0" />
                                        <vsm:VisualTransition GeneratedDuration="0:0:0.1"
                                  To="MouseOver" />
                                        <vsm:VisualTransition GeneratedDuration="0:0:0.1"
                                  To="Pressed" />
                                    </vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualState x:Name="Normal" />
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>

                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Pressed">
                                        <Storyboard>

                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled" />
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Grid Background="#11FFFFFF"
                FlowDirection="LeftToRight"
                HorizontalAlignment="Center"
                Height="18"
                Margin="0"
                VerticalAlignment="Center"
                Width="19">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20*" />
                                    <ColumnDefinition Width="20*" />
                                    <ColumnDefinition Width="20*" />
                                    <ColumnDefinition Width="20*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="23*" />
                                    <RowDefinition Height="19*" />
                                    <RowDefinition Height="19*" />
                                    <RowDefinition Height="19*" />
                                </Grid.RowDefinitions>
                                <Border x:Name="Highlight"
                    BorderThickness="1"
                    Grid.ColumnSpan="4"
                    CornerRadius="0,0,1,1"
                    Margin="-1"
                    Opacity="1"
                    Grid.Row="0"
                    Grid.RowSpan="4">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource ControlPressedColor}" />
                                    </Border.BorderBrush>
                                </Border>
                                <Border x:Name="Background"
                    BorderBrush="Transparent"
                    BorderThickness="1"
                    Grid.ColumnSpan="4"
                    CornerRadius=".5"
                    Margin="0,-1,0,0"
                    Opacity="1"
                    Grid.Row="1"
                    Grid.RowSpan="3">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource CenterIconBackground}" />
                                    </Border.Background>
                                </Border>
                                <Border x:Name="BackgroundGradient"
                    BorderBrush="{DynamicResource CenterIconBorderBrush}"
                    BorderThickness="1"
                    Grid.ColumnSpan="4"
                    CornerRadius=".5"
                    Margin="0,-1,0,0"
                    Opacity="1"
                    Grid.Row="1"
                    Grid.RowSpan="3"></Border>
                                <Rectangle Grid.ColumnSpan="4"
                       Grid.RowSpan="1"
                       StrokeThickness="1">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource CenterIconBackground}"/>
                                    </Rectangle.Fill>
                                    <Rectangle.Stroke>
                                        <SolidColorBrush Color="{DynamicResource CenterIconBorder}"/>
                                    </Rectangle.Stroke>
                                </Rectangle>
                                <Path Fill="{DynamicResource PathBrush}"
                  Grid.Row="1"
                  Grid.Column="0"
                  Grid.RowSpan="3"
                  Grid.ColumnSpan="4"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  RenderTransformOrigin="0.5,0.5"
                  Margin="4,3,4,3"
                  Stretch="Fill"
                  Data="F1 M 33,33L 43,33L 43,43L 33,43L 33,33 Z M 33,20L 43,20L 43,30L 33,30L 33,20 Z M 20,20L 30,20L 30,30L 20,30L 20,20 Z M 20,33L 30,33L 30,43L 20,43L 20,33 Z M 46,33L 56,33L 56,43L 46,43L 46,33 Z M 46,20L 56,20L 56,30L 46,30L 46,20 Z M 20,46L 30,46L 30,56L 20,56L 20,46 Z M 33,46L 43,46L 43,56L 33,56L 33,46 Z M 46,46L 56,46L 56,56L 46,56L 46,46 Z " />
                                <Ellipse Grid.ColumnSpan="4"
                     Fill="{DynamicResource PathBrush}"
                     HorizontalAlignment="Center"
                     Height="3"
                     StrokeThickness="0"
                     VerticalAlignment="Center"
                     Width="3" />
                                <Border x:Name="DisabledVisual"
                    BorderBrush="#B2FFFFFF"
                    BorderThickness="1"
                    Grid.ColumnSpan="4"
                    CornerRadius="0,0,.5,.5"
                    Opacity="0"
                    Grid.Row="0"
                    Grid.RowSpan="4" />
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DatePicker}" x:Key="DatePickerStyle">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}" />
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="SelectedDateFormat" Value="Short" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <!--Set CalendarStyle to DatePickerCalendarStyle.-->
        <Setter Property="CalendarStyle"
          Value="{DynamicResource DatePickerCalendarStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}">
                        <Border.BorderBrush>
                            <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0" />
                                <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
                                <GradientStop Color="{DynamicResource ControlLightColor}" Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal" />
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                   To="1"
                                   Storyboard.TargetProperty="Opacity"
                                   Storyboard.TargetName="PART_DisabledVisual" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_Button"
                    Grid.Column="1"
                    Foreground="{TemplateBinding Foreground}"
                    Focusable="False"
                    HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center"
                    Margin="3,0,3,0"
                    Grid.Row="0"
                    Style="{StaticResource DropDownButtonStyle}"/>
                            <DatePickerTextBox x:Name="PART_TextBox"
                               Grid.Column="0"
                               Foreground="{TemplateBinding Foreground}"
                               Focusable="{TemplateBinding Focusable}"
                               HorizontalContentAlignment="Stretch"
                               Grid.Row="0"
                               VerticalContentAlignment="Stretch" Style="{DynamicResource TextBoxStyle}"/>
                            <Grid x:Name="PART_DisabledVisual"
                  Grid.ColumnSpan="2"
                  Grid.Column="0"
                  IsHitTestVisible="False"
                  Opacity="0"
                  Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0"
                         Fill="#A5FFFFFF"
                         RadiusY="1"
                         Grid.Row="0"
                         RadiusX="1" />
                                <Rectangle Grid.Column="1"
                         Fill="#A5FFFFFF"
                         Height="18"
                         Margin="3,0,3,0"
                         RadiusY="1"
                         Grid.Row="0"
                         RadiusX="1"
                         Width="19" />
                                <Popup x:Name="PART_Popup"
                     AllowsTransparency="False"
                     Placement="Bottom"
                     PlacementTarget="{Binding ElementName=PART_TextBox}"
                     StaysOpen="False" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>