<UserControl x:Class="ServiceConfig.ConverterConfig"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ServiceConfig"
             mc:Ignorable="d" Width="Auto" Height="Auto" d:DesignHeight="415" d:DesignWidth="335">
    <UserControl.Resources>
        
        <local:ProgramsetConverter x:Key="ProgramsetConverter"/>
        <local:IntervalConverter x:Key="IntervalConverter"/>
		<local:CMSPortConverter x:Key="CMSPortConverter"/>
		
        
        <Style x:Key="DgTextBlockStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="3"/>

        </Style>

        <Style TargetType="TextBox" x:Key="txtLastKey" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="BorderThickness" Value="0"/>
            <!--<Setter Property="Foreground" Value="Black"/>-->
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsFocused, ElementName=txtLastKey}" Value="true">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridCell}}, Path=IsSelected}" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
    </UserControl.Resources>
    <StackPanel Orientation="Vertical" Margin="0,0,0,0">
        <GroupBox Header="DVR Communication" Margin="0,0,0,1">
            <Grid Margin="0,-10,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition/>

                </Grid.RowDefinitions>
				<CheckBox Name="cbEnable"  Grid.Column="1" Grid.Row="0" x:Uid="cbEnable" Content="Enable" IsChecked="{Binding DVRSetting.Enable, NotifyOnSourceUpdated=True, UpdateSourceTrigger= PropertyChanged}" SourceUpdated="TextBox_SourceUpdated"/>
                <StackPanel Grid.Column="0" Grid.Row="1" Margin="5">
                    <Label Content="Socket interval"/>
					<Label Content="TCP Port" x:Name="lblTcpPort"/>
                </StackPanel>
                <StackPanel Grid.Column="1" Grid.Row="1" Margin="1" RenderTransformOrigin="0.5,0.5">
					<TextBox x:Uid="txtInterval" Text="{Binding DVRSetting.DvrSocketRetry,  Converter={StaticResource IntervalConverter}}" IsReadOnly="True" Margin="0,0,0,5"/>
					<TextBox x:Uid="txtPort" x:Name="txtPort" Text="{Binding DVRSetting.TCPPort,  Converter={StaticResource CMSPortConverter}, NotifyOnSourceUpdated=True, UpdateSourceTrigger= LostFocus}" SourceUpdated="TextBox_SourceUpdated" MaxLength="5" PreviewTextInput="TextBox_PreviewTextInput" DataObject.Pasting="TextBox_Pasting" TextChanged="TextBox_TextChanged"  />
                </StackPanel>

            </Grid>
        </GroupBox>

        <GroupBox x:Uid="PACConverter" Header="PACDM Converter" Margin="0,0,0,5">
			<StackPanel Orientation="Vertical">
				<Grid Margin="0,-10,0,0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition/>
					</Grid.RowDefinitions>
					<Label Content="Interval(min)" Margin="5,0,0,5" Grid.Column="0" Grid.Row="0" />
					<TextBox x:Name="txtInterval" IsReadOnly="True" Grid.Column="1"  Margin="5,0,0,5" Text="{Binding ServiceConfig.Interval,  Converter={StaticResource IntervalConverter}, UpdateSourceTrigger=LostFocus, NotifyOnSourceUpdated=True}" SourceUpdated="TextBox_SourceUpdated"  ToolTip="Timer to convert PACDM data. The value must be in range 10 - 32767"
                     PreviewTextInput="TextBox_PreviewTextInput" DataObject.Pasting="TextBox_Pasting" Grid.ColumnSpan="2" />
				</Grid>
			<Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <DataGrid Grid.Row="0" CellStyle="{DynamicResource dgCellStyle}" ColumnHeaderStyle="{DynamicResource dgColumnHeaderStyle}" RowStyle="{DynamicResource dgRowStyle}"  
						GridLinesVisibility="All" x:Name="dgConverter" RowHeaderWidth="0" 
                          IsSynchronizedWithCurrentItem="False" SelectionChanged="DataGrid_SelectionChanged" SelectionMode="Single" SelectionUnit="FullRow" Grid.Column="0" 
                          HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" Width="Auto" CanUserAddRows="False" CanUserDeleteRows="False" 
						  ItemsSource="{Binding ConvertInfo, NotifyOnSourceUpdated=True, UpdateSourceTrigger= PropertyChanged}" SourceUpdated="TextBox_SourceUpdated"
						  ScrollViewer.IsDeferredScrollingEnabled="True" EnableColumnVirtualization="True"
                          IsReadOnly="False" CanUserSortColumns="False" CanUserResizeColumns="False" CanUserReorderColumns="False">
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Binding="{ Binding Enable,UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" ClipboardContentBinding="{x:Null}" Header="Enable" IsReadOnly="False" Width="70" >
                            <DataGridCheckBoxColumn.ElementStyle>
                                <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                                    <!--<Style TargetType="CheckBox">-->
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                </Style>
                            </DataGridCheckBoxColumn.ElementStyle>
                        </DataGridCheckBoxColumn>
                        <DataGridTextColumn IsReadOnly="True" Binding="{ Binding Programset, Converter={StaticResource ProgramsetConverter}}" ClipboardContentBinding="{x:Null}" Width="100" Header="Program-set" ElementStyle="{StaticResource DgTextBlockStyle}"/>
                        <DataGridTextColumn IsReadOnly="True" Binding="{ Binding TableName}" ClipboardContentBinding="{x:Null}" Header="Data Name" Width="100" ElementStyle="{StaticResource DgTextBlockStyle}"/>
                        <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Convert Key" Width="130">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
									<TextBox x:Name="txtLastKey"  Text="{Binding LastKey, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" Style="{StaticResource txtLastKey}" VerticalAlignment="Center" PreviewTextInput="TextBox_PreviewTextInput" DataObject.Pasting="TextBox_Pasting" PreviewKeyDown="txtLastKey_KeyDown" MaxLength="25" TextInput="TextBox_TextInput"  LostFocus="txtLastKey_LostFocus" KeyDown="txtLastKey_KeyDown">

                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
									<TextBox Text="{Binding LastKey, UpdateSourceTrigger=PropertyChanged}" BorderThickness="1"  MaxLength="25" PreviewTextInput="TextBox_PreviewTextInput" DataObject.Pasting="TextBox_Pasting">
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>

                        </DataGridTemplateColumn>
                        <!--<DataGridTextColumn Binding="{ Binding DvrDate}" ClipboardContentBinding="{x:Null}" Header="Last Date"/>-->
                        <DataGridTemplateColumn Header="Last Date" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding DvrDate, StringFormat=\{0:MM/dd/yyyy\}}" VerticalAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <DatePicker SelectedDate="{Binding DvrDate, NotifyOnSourceUpdated=True, UpdateSourceTrigger=LostFocus}" Style="{DynamicResource DatePickerStyle}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <StackPanel Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" Margin="0">
					<Button x:Name="btnFirst" Style="{DynamicResource WindowButtonIconStyle}" Padding="5,3,5,3" Margin="0" ToolTip="Move to First" Width="30" Height="30" Click="btnFirst_Click">
						<Button.Content>
							<Path Data="{DynamicResource Icon_Last}"  Fill="{Binding ElementName=btnFirst, Path=Foreground}" Stretch="Fill">
								<Path.LayoutTransform>
									<RotateTransform Angle="270" />
								</Path.LayoutTransform>
							</Path>
						</Button.Content>
					</Button>
					<Button x:Name="btnUp" Style="{DynamicResource WindowButtonIconStyle}" ToolTip="Move Up"  Padding="5,3,5,3" Margin="0"  Width="30" Height="30"  Click="btnFirst_Click">
						<Button.Content>
							<Path Data="{DynamicResource Icon_Play}"  Fill="{Binding ElementName=btnUp, Path=Foreground}" Stretch="Fill">
								<Path.LayoutTransform>
									<RotateTransform Angle="-90" />
								</Path.LayoutTransform>
							</Path>
						</Button.Content>

					</Button>
					<Button x:Name="btnDown" Style="{DynamicResource WindowButtonIconStyle}" ToolTip="Move Down" Padding="5,3,5,3" Margin="0"  Width="30" Height="30" Click="btnFirst_Click">
						<Button.Content>
							<Path Data="{DynamicResource Icon_Play}"  Fill="{Binding ElementName=btnDown, Path=Foreground}" Stretch="Fill">
								<Path.LayoutTransform>
									<RotateTransform Angle="90" />
								</Path.LayoutTransform>
							</Path>
						</Button.Content>
					</Button>
					<Button x:Name="btnLast" Style="{DynamicResource WindowButtonIconStyle}"  Padding="5,3,5,3" Margin="0" ToolTip="Move to Last"  Width="30" Height="30" Click="btnFirst_Click">
						<Button.Content>
							<Path Data="{DynamicResource Icon_Last}"  Fill="{Binding ElementName=btnLast, Path=Foreground}" Stretch="Fill">
								<Path.LayoutTransform>
									<RotateTransform Angle="90" />
								</Path.LayoutTransform>
							</Path>
						</Button.Content>
					</Button>


				</StackPanel>
            </Grid>
			</StackPanel>
        </GroupBox>
        <StackPanel Width="Auto" Height="30" HorizontalAlignment="Right" Orientation="Horizontal">
            <Button x:Name="btnSave" x:Uid="btnSave" Content="Save" Margin="0,0,5,0" Click="Button_Click"/>
            <Button x:Name="btnCancel" x:Uid="btnCancel" Content="Cancel" Click="Button_Click" IsCancel="True"/>
        </StackPanel>
    </StackPanel>
</UserControl>
