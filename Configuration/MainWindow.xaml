<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell"
        xmlns:local="clr-namespace:ServiceConfig"
        xmlns:toolkitLayout="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Layout.Toolkit"
        xmlns:toolkitInput="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    mc:Ignorable="d" x:Class="ServiceConfig.MainWindow" 
        Title="PAC Converter Configuration" Height="650" Width="790"
		x:Name="frmMain"
        ResizeMode="CanMinimize"
        WindowStyle="None"
		Foreground="WhiteSmoke"
		Background="{DynamicResource WindowBackgroundColorBrush}"
        d:DesignWidth="750.797" d:DesignHeight="454.523"
        >
    <!--Style="{DynamicResource WindowStyleXP}"-->
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/Metro/Dark/MetroDark.MSControls.Core.Implicit.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <local:VisibilityConverter x:Key="VisibilityConverter"/>
            <local:ForceGroundConverter x:Key="ForceGroundConverter"/>

            <Style x:Key="ToggleButtonImgStyle" BasedOn="{StaticResource ToggleButtonStyle}" TargetType="{x:Type ToggleButton}" />
        </ResourceDictionary>
    </Window.Resources>

    <Border BorderBrush="{DynamicResource BlueColorBrush}" BorderThickness="2" Visibility="Visible" >

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" MouseDown="move_window">
                <Border BorderThickness="0">
                    <AdornerDecorator>
                        <Grid x:Name="LayoutRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="130"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="HeaderBackground" Height="30"  VerticalAlignment="Top" Grid.Row="0" Fill="#FF0F0B0B" Grid.ColumnSpan="2" Margin="0,0,99,0"/>
                            <TextBlock 	TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" VerticalAlignment="Center"  Margin="8 -1 0 0"  FontSize="16"  Foreground="{Binding ElementName=frmMain, Path=Foreground}"  Text="{Binding ElementName=frmMain, Path=Title}" Grid.Column="0" Grid.Row="0"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" shell:WindowChrome.IsHitTestVisibleInChrome="True" Grid.Row="0" Grid.Column="1" Background="#FF0F0B0B" Height="30">
								<Button x:Name="bntAbout" ToolTip="About" Style="{StaticResource WindowButtonStyle}" Padding="0,0,0,4" Click="bntAbout_Click">
									<Button.Content>
										<Grid Width="30" Height="25"  RenderTransform="1,0,0,1,0,1" >
											<Path Data="{DynamicResource ResourceKey= Icon_Info}" Width="18" Height="18" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                         Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Stretch="Fill" />
										</Grid>
									</Button.Content>
								</Button>
								<Button Command="{Binding Source={x:Static shell:SystemCommands.MinimizeWindowCommand}}" ToolTip="Minimize" Style="{StaticResource WindowButtonStyle}">
                                    <Button.Content>
                                        <Grid Width="30" Height="25" RenderTransform="1,0,0,1,0,1">
                                            <Path Data="M0,6 L8,6 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                        Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2"  />
                                        </Grid>
                                    </Button.Content>
                                </Button>
                                <Grid Margin="1,0,1,0">
                                    <Button x:Name="Restore" Command="{Binding Source={x:Static shell:SystemCommands.RestoreWindowCommand}}" ToolTip="Restore" Visibility="Collapsed" Style="{DynamicResource WindowButtonStyle}">
                                        <Button.Content>
                                            <Grid Width="30" Height="25" UseLayoutRounding="True" RenderTransform="1,0,0,1,.5,.5">
                                                <Path Data="M2,0 L8,0 L8,6 M0,3 L6,3 M0,2 L6,2 L6,8 L0,8 Z" Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                            Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1"  />
                                            </Grid>
                                        </Button.Content>
                                    </Button>
                                    <Button x:Name="Maximize" Command="{Binding Source={x:Static shell:SystemCommands.MaximizeWindowCommand}}" ToolTip="Maximize" Style="{DynamicResource WindowButtonStyle}">
                                        <Button.Content>
                                            <Grid Width="31" Height="25">
                                                <Path Data="M0,1 L9,1 L9,8 L0,8 Z" Width="9" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                            Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2"  />
                                            </Grid>
                                        </Button.Content>
                                    </Button>
                                </Grid>
                                <Button x:Name="btnClose" Command="{Binding Source={x:Static shell:SystemCommands.CloseWindowCommand}}" ToolTip="Close"  Style="{StaticResource WindowButtonStyle}" Click="btnClose_Click">
                                    <Button.Content>
                                        <Grid Width="30" Height="25" RenderTransform="1,0,0,1,0,1">
                                            <Path Data="M0,0 L8,7 M8,0 L0,7 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                        Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1.5"  />
                                        </Grid>
                                    </Button.Content>
                                </Button>
                            </StackPanel>

                        </Grid>
                    </AdornerDecorator>
                </Border>

            </Grid>

            <Grid Margin="5" Grid.Row="1">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition  Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Margin="0,10,0,0" Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Top" Background="Gray">
                    <RadioButton GroupName="ConfigFunction" IsChecked="True" Style="{DynamicResource ToggleButtonStyle}" VerticalContentAlignment="Center"  x:Name="btnsvrConfig" Content="CMS Web Server" Height="30" Width="Auto" VerticalAlignment="Top"/>
                    <RadioButton GroupName="ConfigFunction" Style="{DynamicResource ToggleButtonStyle}" VerticalContentAlignment="Center"  x:Name="btncvtConfig" Content="Converter Setup" Height="30" Width="Auto" VerticalAlignment="Top"/>
                    <RadioButton GroupName="ConfigFunction" Style="{DynamicResource ToggleButtonStyle}"  Foreground="{Binding RestartRequest, Converter={StaticResource ForceGroundConverter}}"  Content="Converter Service"  VerticalContentAlignment="Center" x:Name="btnConverter" Height="30" Width="Auto" VerticalAlignment="Top"/>
                    <RadioButton GroupName="ConfigFunction" IsEnabled="True" Style="{DynamicResource ToggleButtonStyle}" VerticalContentAlignment="Center"  x:Name="btnLog" Content="Logs" Height="30" Width="Auto" VerticalAlignment="Top"/>
                    <RadioButton GroupName="ConfigFunction" IsEnabled="True" Style="{DynamicResource ToggleButtonStyle}" VerticalContentAlignment="Center" x:Name="btnClear" Content="Cache Data" Height="30" Width="Auto" VerticalAlignment="Top"/>
                </StackPanel>
                <StackPanel Grid.Column="1" Margin="10,10,0,0">

                    <local:ServiceConfigure x:Name="ServiceConfig" OnButtonClick="ServiceConfig_OnButtonClick" 
						Visibility="{Binding IsChecked, Converter={StaticResource VisibilityConverter}, ElementName=btnsvrConfig}"
						Margin="0,5,0,0" OnSettingChange="ConverterConfig_OnSettingChange"/>
                    <local:ConverterConfig x:Name="ConverterConfig"
						Visibility="{Binding IsChecked, Converter={StaticResource VisibilityConverter}, ElementName=btncvtConfig}" 
						OnButtonClick="ConverterConfig_OnButtonClick" OnSettingChange="ConverterConfig_OnSettingChange" />

                    <local:ServiceControl x:Name="Converter" OnControlButtonClick="Converter_OnControlButtonClick" Visibility="{Binding IsChecked, Converter={StaticResource VisibilityConverter}, ElementName=btnConverter}"/>
                    <local:LogsControl x:Name="ViewLogs" Visibility="{Binding IsChecked, Converter={StaticResource VisibilityConverter}, ElementName=btnLog}"/>
                    <local:CacheControl x:Name="Cachecontrol" Visibility="{Binding IsChecked, Converter={StaticResource VisibilityConverter}, ElementName=btnClear}"  
					Data="{Binding RelativeSource={RelativeSource AncestorType=local:MainWindow}, Path=DB}" OnSettingChange="ConverterConfig_OnSettingChange"/>
					<TextBlock Text="Any change on CMS Web Server, Converter Setup, Cache Data need to restart Converter Service to apply new value." FontSize="15" TextWrapping="Wrap">
						   <TextBlock.Style>
							 <Style>
								<Setter Property="TextBlock.Visibility" Value="Collapsed" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding WaitingUpgrade}" Value="False">
											<Setter Property="TextBlock.Visibility" Value="Visible"/>
										</DataTrigger>
									</Style.Triggers>
							</Style>
						</TextBlock.Style>
					</TextBlock>
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0">
						<StackPanel.Style>
							<Style>
								<Setter Property="StackPanel.Visibility" Value="Collapsed"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding WaitingUpgrade}" Value="True">
										<Setter Property="StackPanel.Visibility" Value="Visible"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</StackPanel.Style>
						<TextBlock x:Name="txtRestart" Text="{Binding msg_WaitingUpgrade}" FontSize="15" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="Red">
					</TextBlock>
						<Button Content="Upgrade Now" Name="btnUpgrade" Width="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Click="Button_Click"/>
					</StackPanel>
                </StackPanel>
                <xctk:BusyIndicator Grid.Column="1" x:Name="BusyIndicator" Background="DimGray" OpacityMask="Black" IsBusy="False" Margin="5,10,0,0">
                </xctk:BusyIndicator>
            </Grid>
        </Grid>
    </Border>
</Window>
